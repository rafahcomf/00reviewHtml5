06/12/2022 - Reiniciando HTML OBC

Introdução a Web.

*O que é a Web e como ela funciona;
*o que é Frontend, BackEnd e Full Stack;
*O que é HTML5  e como utilizá-lo;
*O que é CSS3 e como utilizá-lo;
*O que é Bulma e como utilizá-lo;
*Como desenvolver um portfólio com Bulma;

**O que é a Web e como ela funciona**

<Servidor WEB:>
	>É um software que fica instalado em um computador na rede e serve para receber as requisições de um Browser e responder com os arquivos correspondentes ao site solicitado (que em geral são páginas criadas com Html, CSS e JavaScript e alguns recursos como imagens, áudios e vídeos).

<HTTP:>
	>Protocolo Http (Hypertext Transfer Protocol) é uma espécie de idioma utilizado para que o cliente Web (geralmente um Browse) e o servidor web se entendam. Cada um dos outros ipos de servidores WEB utiliza um protocolo diferente.

Servidores WEB relacionado aos sites: 
	>Apache;
	>Nginx.

Outros protocolos: 
		>SMTP - recebimento e envio de e-mails;
		>FTP - recebimento e download de arquivos;

<Endereço IP:>
	>Endereço de protocolo da internet (internet protocol addres (ip address)) é um rótulo numérico atribuído a cada dispositivo (computador, impressora, smartphone etc.) conectado a uma rede de computadores que utiliza o Protocolo de internet para comunicação.

Um endereço IP serve a duas funções principais: 
	>Identificação de interface de hospedeiro ou de rede;
	>Endereçamento de localização.

<DNS:>
	>Sistema de nomes de Domínio (Domain Name System), é um sistema hierárquico e distribuido de gestão de nomes para computadores, serviços ou qualquer máquina conectada à internet ou a uma rede privada. Faz a associação entre várias informações atribuídas a nomes de domínios e cada entidade participante.
		
		>A sua utilização mais convencional associa nomes de domínios mais facilmente memorizáveis a endereços IP numéricos, necessários à localização e identificação de serviços e dispositivos, processo esse denominado por: "resolução por nome".

*Após descobrir o IP correto do servidor na rede, o browser vai então solicitar a árvore de arquivos relacionas a aquele site digitado ao servidor WEB. 
		
		>Site estático: devolverá arquivos pré existentes;
		>Site dinâmico: o servidor solicitará para um outro software (ex: nodeJS) a geração dessas paginas dinâmicas.


**Dev. Front End, Back End e Full Stack**

	>Frontend: é o responsável pela ciração da interface do site com o usuário, geralmente usando HTML, CSS e Javascript;

	>Backend: em geral é o responsável por desenvolver a estrutura do site que não é apresentada ao usuário, por exemplo a parte que acessa o banco de dados, processa as regras de negócio e interage com os outros serviços.
		>É comum utilizarmos no backend linguagens de programação como Javascript, Ruby e Python e frameworks como NodeJS, Ruby on Rails e Django.

	>Fullstack: consegue desenvolver tanto o frontend como o backend, podendo atuar no ciclo completo de desenvolvimento de um site.

**Módulo HTML**

<Objetivos:>
	>compreender o que é e como funciona o HTML;
	>aprender a usar os principais elementos do HTML;
	>compreender o funcionamento dos forms;
	>conhecer as novidades do HTML5;
	>aprender a organizar os códigos;
	>criar um site do zero baseado em um mockup.

Conhecendo o HTML: 

<O que é?> 
>É uma linguagem de marcação de hipertexto utilizada para a criação de páginas WEB.
	>Hipertextos se referem aos links nas páginas que podem conectar a outros documentos no mesmo site ou em outro site, os links são um aspecto fundamental da Web, é o que conecta tudo.

<Como surgiu?>
>Foi criado entre 1989 e 1990 para o compartilhament ode pesquisas cientificas entre Tim Berners-Lee (físico inglês e autor da linguagem) e seus colegas de trabalho;
	>Se popularizou com o inicio da internet.

<O Html é baseado em Tags:>
<tag> conteudo da tag </fechaTag>
exemplo: <p> Hello World </p> (tag de parágrafo e retornará "Hello World".

<Estrutura de uma página Web:>

<!DOCTYPE html>
<html> -> tag root, todos os elementos devem estar dentro desta tag.
<head> -> vinculada a metadados, informações enviadas ao browser.
  <title>Título da página(aba do navegador) e também do google</title>
</head>
<body> -> todo o conteúdo da página deve ficar aqui dentro;
  <h1>Título principal do documento</h1>
  <p>Parágro a ser inserigo na tag</p>
</body>
</html>

Link para documentação do HTMl básico:
https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics

**Tags básicas do HTML** 

anotações de tags básicas do html foram feitas no VScode, já criando um arquivo tags-index.html

12/12/2022

**Listas no HTML**

Existem listas ordenadas <ol> e listas não ordenadas no HTML<ul>.
As listas ordenadas seguem uma sequência numérica, e as listas não ordenadas, são listadas com "bullets points", sendo que estes podem ser alterados em sua forma gráfica.

Lista ordenada:        Lista não ordenada:
1 Mercúrio			* Jupiter
2 Venus			* Saturno
3 Terra			* Marte
4 Marte			* Urano
5 Jupiter			* Netuno

Criando Listas na prática: Feito no VScode.

***ATALHO!!***
Para criar listas, já com seus sub-itens sem precisar digitar tudo, podemos usar o atalho, tendo como exemplo a lista NÃO ordenada:
	
ul>li*6 + enter, cria a seguinte estrutura:

<ul>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
</ul>	

Para utilizar o atalho com listas que contenham configuração Strong para determinada parte do texto:

ul>li*7>strong + enter, cria a seguinte estrutura:

	<ul>
        <li><strong>Texto negrito:</strong>Texto padrão.</li>
        <li>Texto padrão, <strong>texto negrito, </strong>texto padrão.</li>
        <li>Texto padrão, <strong>texto negrito.</strong></li>
        <li><strong></strong></li>
        <li><strong></strong></li>
        <li><strong></strong></li>
        <li><strong></strong></li>
      </ul>



Esse tipo de atalho pode ser aplicado a diversas tags que tem em sua estrutura, multiplos sub-itens, agilizando na construção do código no Vscode.

É possivel também, inserir uma sublista, dentro do "item" de uma lista. (listas aninhadas)
No exercicio de listas, as listas estão agrupadas, com sub-listas dentro de listas, todas não ordenadas.

12/12/2022

**Organizando os códigos com Divs e Span.** (**Atenção, são elementos não semânticos e estão caindo em desuso**)

A <div> é normalmente utilizada em volta de um bloco de códigos, sendo utilizada para ocupar o maior espaço de tela possível, dentro do editor, da esquerda para a direita. É um elemento de bloco e sempre inicia em uma nova linha e serve para separar blocos maiores de código.
**mais utilizada para marcação de container genérico**

O <span> é diferente. 
Nem sempre ele começa em uma nova linha e só atribui o espaço necessário, pode ser utilizado para aplicação de estilo em uma área parcial de texto. 

**14/12/2022**

Apêndice:

***ELEMENTOS SEMANTICOS DO HTML5***
Pesquisar mais em: 
https://developer.mozilla.org/pt-BR/docs/Web/HTML/Element/section
https://www.w3schools.com/html/html5_semantic_elements.asp

O que é Semântica?
Semântica é o estudo do significado das palavras e frases em um idioma.

O que são Elementos Semânticos?
São elementos com um significado.
São Tags mais semanticas que, ao ler, já se entende o que o "programador" quis fazer com estes elementos.

Alguns elementos semânticos:


<header> Tudo o que fica no topo do site, cabeçalho da página, logotipo ou icone e informações de autoria.</header>
**segundo o w3schools o header pode ser usado também dentro de um <article> para definir seu titulo e chamada**

<nav> Barra com links de navegação, menus.</nav>
**nem todos os lins de um documento devem estar dentro do <nav>. O elemento <nav> destina-se apenas aos principais blocos de links de naveção. Navegadores como leitores de tela para usuários desativados, podem usar esse elemento para determinar se devem omitir a renderização inicial deste conteúdo.**

<aside> Pequenos textos na lateral do site, em um quadrante.</aside>
**o conteúdo inserido em <aside> deve estar indiretamente relacionado ao conteúdo circundante, como um apendice, explicando sobre um local que foi mencionado no conteúdo "principal.**

<section>Define a seção de um documento.</section>
**Não existem definições em regras ou convenções para uso de <section> e <article>, porém existe o entendimento de que o <section> é uma versão mais semântica da <div>. Pensando na semântica, uma <section> será um elemento que não faria sentido por si só, se retirado do restante do contexto. Cada <section> deve ser identificado, geralmente incluindo um cabeçalho <h1> - <h6> como um filho do elemento. Não se deve usar usar como um container genérico, para isso usamos a <div>.**


<article> Um artigo isolado, textos, publicações de forum, posts de blogs, artigos de News. </article>
**pode ser um conteúdo dependente ou indenpente do restante do site. Um artico deve fazer sentido por si só e deve ser possível distribui-lo idenpendentemente do restante do site.**

<footer> Rodapé da página </footer>

elementos não semanticos, exmeplo: <div> e <span>: não dizem nada sobre seu conteúdo;



13/12/2022

**Atributos HTML**

Existem tags que abrem na esquerda e fecham na direita, exemplo:

<p>Parágrafo</p> ou <tag name="valor"></tag>; (name="valor" são os atributos da tag.)

Existem tag que não necessitam de fechamento, exemplo:
<br> (breakline)
<hr> (linha horizontal) 

exemplo de atributos, como link e imagem:

<a href="https://escoladejavascript.com">Clique aqui</a> sendo href="..." um atributo;

**Para abrir o link em uma nova guia, utilizamos também o atributo target="_blank", da seguinte forma:

<a target="_blank" href="...endereço link...">Clique aqui</a>;
tag a = anchor.

<img src="img/example.png> que não necessita de fechamento, sendo src="..." um atributo;

**Normalmente, ao inserirmos a tag img com o atributo src="..." o atributo alt="..." entra junto para ser preenchido e é importante preenche-lo com uma descrição breve e exata da imagem a ser usada pois, ele será exibido caso a imagem não abra.

Ao usar imagens, ela podem ser hospedadas localmente ou em um servidor de livre acesso na internet, como google, wikipédia e afins.

Para usar imagens hospedadas localmente, de forma mais rapida e assertiva, devemos utilizar o ./ (ponto barra) para buscar a imagem armazenada dentro do pc.

Para saber mais sobre os atributos, podemos procurar na documentação do MDN ou do W3SCHOOLS.

Para linkar paginas entre si, utilizamos o mesmo processo, sempre apontando no texto do link, para onde o usuário será direcionado.
Neste caso do exercicio, como ambos arquivos estão na mesma pasta, em um "servidor local", ou seja, nosso computador, não é necessário inserir um hiperlink de web, bastando apenas inserir o nome do arquivo, que neste exemplo são:
saturno.html e tita.html.


14/12/2022

**Exercicio atributos HTML**

Descrição do exercicio:

Criar um "guia de Galáxias com 3 páginas e links entre eles, usando também os atributos, divs e afins.
Vou tentar utilizar também o HTML semântico, para praticar.

Textos para o exericio:

​Andrômeda

Guia das galáxias
Galáxia de Andromeda
https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Andromeda_Galaxy_%28with_h-alpha%29.jpg/280px-Andromeda_Galaxy_%28with_h-alpha%29.jpg


Descrição
A galáxia de Andrômeda (Messier 31, NGC 224) é uma galáxia espiral localizada a cerca de 2,54 milhões de anos-luz de distância da Terra, na direção da constelação de Andrômeda.


Dados Interessantes


  Além da Via Láctea, é a galáxia mais estudada
  Suas duas galáxias satélite, Messier 32 e Messier 110, são visíveis em binóculos
  Sua distância em relação à Terra ainda não foi bem definida


Outras galáxias: Olho Negro, Grande Nuvem de Magalhães

Olho Negro

​Guia das galáxias
Olho Negro
https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/Blackeyegalaxy.jpg/280px-Blackeyegalaxy.jpg


Descrição
A galáxia do Olho Negro (Messier 64, NGC 4826) é uma galáxia espiral localizada a aproximadamente dezessete milhões de anos-luz (cerca de 5,2 megaparsecs) de distância na direção da constelação da Cabeleira de Berenice.


Dados Interessantes


  Os cientistas acreditam na hipótese de que ela seja o resultado da colisão entre duas galáxias.
  A galáxia espiral foi descoberta por Edward Pigott em 23 de março de 1779
  Pode ser vista com bons binóculos


Outras galáxias: Andromeda, Grande Nuvem de Magalhães

Pequena Nuvem de Magalhães

Guia das galáxias
Grande Nuvem de Magalhães
https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/Large.mc.arp.750pix.jpg/250px-Large.mc.arp.750pix.jpg


Descrição
Grande Nuvem de Magalhães (comumente abreviada como LMC, do inglês Large Magellanic Cloud) é uma galáxia anã
  satélite que orbita em torno da Via Láctea.


Dados Interessantes


  É rica em gases e poeira
  Foi batizada por Fernão de Magalhães
  A Grande Nuvem de Magalhães é uma das galáxias mais próximas da Via Láctea


Outras galáxias: Andromeda, Olho negro

**ANTES DE SEGUIR COM MAIS AULAS, FAZER UM GUIA COM AS 3 GALÁXIAS EM UMA SÓ PAGINA, REDIRECIONANDO EM LINK PARA A WIKIPÉDIA, OU ATENTAR NAS PROXIMAS AULAS PARA INSERIR MAIS ELEMENTOS.**

15/12/22
**Nota!**
Vendo a correção do exercicio de guia das galáxias, ficou claro que não precisa usar o <p> antes de um <h1> - <h6> pois a tag <h> já trata de pular linha tanto acima quanto abaixo do titulo.
corrigido em código, falta subir o commit.

também foi adicionado ao comentário na tag <nav> que poderia ter sido feito com um <h4>, desde que todo o bloco de links estiivesse dentro do <h4>.
Foi corrigido no Vscode.
Sempre atentar nisso e tentar se não der certo.

<Criando tabelas>
TAG <table>
<border> atributo, cria a borda em volta da tabela e de suas celulas;(normalmente é feito pelo css, mas no momento, utilizaremos direto no HTML);
<tr> table row, cria as linhas da tabela;
<thead> separa o titulo da tabela do restante dela, ou seja, o <th> deve sempre ser tag filho do <thead>, apos o <tr>.
<th> table head, cria a linha de titulos da tabela, deve ficar dentro do <thead>; (como se criasse as colunas)
<tbody> tag que separa o corpo da tabela, ou seja, todos os que forem celulas do corpo da tabela, devem estar dentro dele.
<td> elemento de "célula";
<caption> centraliza o titulo geral da tabela acima dela, podendo ser usado com as tags <h> ou não.

Estrutura:

<table border="1">
	<thead>
		<tr>
			<th>titulo 1</th>
			<th>titulo 2</th>
		</tr>
	</thead>

	<tbody>
		<tr>
			<td>elemento 1</td>
			<td>elemento 2</td>
		</tr>
	</tbody>
</table>

Exercicio: Criando tabela.
Criar uma tabela correspondente à mostrada em aula, imagem salva na pasta.

Texto:
Massas no sistema solar:
Componente / Massa
Sol - 99,85%
Júpiter - 0,10%
Demais Planetas - 0,04%
Cometas - 0,01% (?)
Satélites e anéis - 0,000 05%
Asteroides - 0,000 000 2%
Meteoritos e poeira - 0.000 000 1% (?)

Exercicio foi feito corretamente, apenas o <h3> estava dentro do <table> e deve ser fora.

**Conhecendo o forms**
Forms são campos que recebem as entradas dos usuários.
São formulários de login, cadastro, ou tweet, que também é um formulário.
O Form é muito importante para submeter informações, tal qual os links para navegação web.

<Elementos importantes de um form>
<form> </form> que são as tags principais e todos os elementos de um form devem estar dentro dela.

<input type="text"> são onde são preenchidos os textos de um form, como nome de usuário;
<input type="radio"> 	Exibe botões de seleção, aqueles "redondos" normalmente 				usados para "masculino e feminio"
<input type="checkbox">	Exibe caixas de selção;
<input type="submit">	Exibe um botão de submeter;
<input type="button">	Exibe um botão "clicável".

Atributos:
action - esse atributo action é onde estará a url do servidor que será enviado o form:
<form action="action_page.php"> que pode estar no mesmo projeto ou em um projeto separado, podendo ser uma url externa.

Quem recebe as informações do Form?
As requisições e informações do Form é o back end, que faz a alterações em banco de dados ou envio de e-mail, rodando "por baixo".

Criando um form de pesquisa no google, na prática:

Encontre no google: (titulo)
<label for "q">Texto</label> a tag <label> é uma tag de texto associada a um input, ou seja: voce clica no texto de "chamada" de um campo e o cursor vai para o campo de preenchimento.

o Label for Q significa query, que é o que mais vamos usar em uma busca. 

Estrutura:

    <section>
        <h3>Encontre no Google.</h3>
        <form action="https://www.google.com/search" target="_blank">
            <label for="q">O que deseja pesquisar?</label>
            <input type="text" id="q" name="q" placeholder="Digite aqui sua pesquisa.">
            <input type="submit" value="Pesquisar!">
        </form>
    </section>

Estrutura comentada:

    <section>
        <h3>Encontre no Google.</h3>
        <form action="https://www.google.com/search" target="_blank">
		**o url dentro do atributo action indica para onde os inputs serão enviados. Pode ser em um servidor interno ou externo, dependendo do tipo de projeto.
		  Aqui, usamos o encaminhamento já com o input, com uma resposta do google a pesquisa feita.
		**o target="_blank" funciona como nos links de página, abrindo a pesquisa em uma nova aba e não na aba utilizada pelo form.

            <label for="q">O que deseja pesquisar?</label>
		**a tag <label> indica que o texto está associado a um input, o que define que se o usuário clicar no texto, o cursor ira para o campo de preenchimento do 		  form

            <input type="text" id="q" name="q" placeholder="Digite aqui sua pesquisa.">
		** type="text" se refere ao input de preenchimento do form, id="q" name="q" ainda iremos ver, mas são os parametros de pesquisa do google.
		** placeholder="..." é o texto que aparece dentro do campo de pesquisa, apontando ao usuário, alem do cursor, onde ele deve digitar.

            <input type="submit" value="Pesquisar!">
		** type="subit" é o botão de submeter a pesquisa;
		** value="..." altera o que aparecerá escrito no botão para o usuário e, quanto mais explicito, melhor.
		
        </form>
    </section>

16/12/2022
**Validação de Forms**
(validação de regras, não do backend)

O que são validações?
São uma maneira de garantir que os dados inserios estão seguindo a norma para aquele campo.

Por exmplo, nos campos de pesquisar, utilizar o parâmetro required, para que o campo de pesquisa seja obrigatoriamente preenchido.

o parametro type="email" apesar de ser um parametro, com o required também é referente a validação pois, se nao for digitado um endereço de e-mail, o usuário não consegue dar sequência.

Minimo e máximo também são padrões de validação no front end.
Usando como parâmentro o type="number", é possível utilziar um minimo e máximo a ser preenchido, após o placeholder, min="..." max="...".

autocomplete="off" também é uma forma de validação, informando ao HTML que o campo com este parâmetro não deve ser auto-completado.

Verificar outras formas de validação no w3Schools.

verificar o datalist também.

**Aprofundando nos inputs**
<input type="radio" name="gender" value="male" checked> Male
para o input "radio" é importante usar em todos, o mesmo name, neste caso "gender", pois é por este parâmetro que o backend processará a requisição;
Neste tipo de input, somente uma opção poderá ser selecionada;

<input type="checkbox" name="vehicle1" value="bike"> I have a bike
no input checkbox, os parâmetros devem ser configurados de acordo com a descrição e, diferente do radio, mais de uma opção pode ser selecionada.

<input type="date" name="bday">
Abre um dropdown de calendário, podendo também ser inserida a data.

<input type="search" name="googlesearch">
Input de pesquisa;

Exercicio: Criando meu primeiro form.
Criar um form semelhante ao mostrado na aula.
Imagem de exemplo salva na pasta referente. 

**27/12/22**

Noovidades do HTML5:
>Semântica melhor para as tags;
>Tags para incluir áudio e vídeo;
>Tags melhores para separar as partes do site (header, section, aside, footer);
>Melhor tratamento para gráficos;
>Novos tipos de input.

Novas Tags do HMTL5:
Tag de video:
<video width="320" height="240" controls> 
	<source src="movie.mp4" type="video/mp4">
	<source src="video.ohh" type="video/ogg">
Your browser does not support the video tag. **mensagem "alt" para erro**
</video>

(pode ser usado mais de um url para o mesmo vídeo, usando a a tag source src=)
(controls se refere a mostrar controles de play, pause etc)
(também podemos usar o atributo autoplay para a tag de video, eliminando o atributo controls: <video width="" height="" autoplay> e também o autoplay pode ser inserido com o atributo muted, para que não seja iniciado com som:
<video width="" height="" autoplay muted>)

Tag de audio:
<audio controls>
	<source src="horse.ogg" type="audio/ogg">
	<source src="horse.mp3" type="audio/mpeg">
Your browser does not support the audio element. **mensagem "alt" para erro**
</audio>

(pode ser usado mais de um url para o mesmo audio, usando a a tag source src=)
(controls se refere a mostrar controles de play, pause etc)

**os atributos de autoplay e muted podem ser usados também para as tags de audio.**

Novos tipos de input:
<input type="url">
Se a Url não estiver no formato correto, não permite o submit;

<input type="range" min="1" max="10">
como se fosse uma barrinha de volume.

<input type="time">
tempo, alem da data;

<input type="search" list="weapons">
	<datalist id="weapons" style="display:hidden;">
		<option value="sword">
		<option value="axe">
		<option value="wade">
	</datalist>
Basicamente o input search é ultilizado com datalist, pode ser usado como autocomplete de busca.

boa lista com as novas tags:
https://www.webfx.com/archive/blog/images/assets/cdn.sixrevisions.com/demos/0345-new_html5_form_input_types/new-html5-form-input-types.html

Refactoring: 
***ELEMENTOS SEMANTICOS DO HTML5***
Pesquisar mais em: 
https://developer.mozilla.org/pt-BR/docs/Web/HTML/Element/section
https://www.w3schools.com/html/html5_semantic_elements.asp

O que é Semântica?
Semântica é o estudo do significado das palavras e frases em um idioma.

O que são Elementos Semânticos?
São elementos com um significado.
São Tags mais semanticas que, ao ler, já se entende o que o "programador" quis fazer com estes elementos.

Alguns elementos semânticos:


<header> Tudo o que fica no topo do site, cabeçalho da página, logotipo ou icone e informações de autoria.</header>
**segundo o w3schools o header pode ser usado também dentro de um <article> para definir seu titulo e chamada**

<nav> Barra com links de navegação, menus.</nav>
**nem todos os lins de um documento devem estar dentro do <nav>. O elemento <nav> destina-se apenas aos principais blocos de links de naveção. Navegadores como leitores de tela para usuários desativados, podem usar esse elemento para determinar se devem omitir a renderização inicial deste conteúdo.**

<aside> Pequenos textos na lateral do site, em um quadrante.</aside>
**o conteúdo inserido em <aside> deve estar indiretamente relacionado ao conteúdo circundante, como um apendice, explicando sobre um local que foi mencionado no conteúdo "principal.**

<section>Define a seção de um documento.</section>
**Não existem definições em regras ou convenções para uso de <section> e <article>, porém existe o entendimento de que o <section> é uma versão mais semântica da <div>. Pensando na semântica, uma <section> será um elemento que não faria sentido por si só, se retirado do restante do contexto. Cada <section> deve ser identificado, geralmente incluindo um cabeçalho <h1> - <h6> como um filho do elemento. Não se deve usar usar como um container genérico, para isso usamos a <div>.**


<article> Um artigo isolado, textos, publicações de forum, posts de blogs, artigos de News. </article>
**pode ser um conteúdo dependente ou indenpente do restante do site. Um artico deve fazer sentido por si só e deve ser possível distribui-lo idenpendentemente do restante do site.**

<footer> Rodapé da página </footer>

elementos não semanticos, exmeplo: <div> e <span>: não dizem nada sobre seu conteúdo;

Exercicio Final - Módulo HTML 5 - Criando um site completo.
Criando um site inspirado na spaceX;

Utilizar os textos grandes como loren ipsilum;
São 3 paginas interligadas;

Ao clicar no logo, volta para o inicio do site;

Pagina 1: explicação da empresa e serviços prestados, bem como tabela de preços;

Pagina 2: Mostra as aeronaves disponives;

Pagina 3: contratenos: fale conosco, hire us.






 
















